.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_examples_01-filter_compute-normals.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_01-filter_compute-normals.py:


Computing Surface Normals
~~~~~~~~~~~~~~~~~~~~~~~~~


Compute normals on a surface.


.. code-block:: default


    # sphinx_gallery_thumbnail_number = 2
    from pyvista import examples







Computing the normals of a surace is quite easy using :class:`pyvista.PolyData`'s
``compute_normals`` method


.. code-block:: default


    mesh = examples.download_topo_global()
    mesh.plot(cmap='gist_earth', show_scalar_bar=False)




.. image:: /examples/01-filter/images/sphx_glr_compute-normals_001.png
    :class: sphx-glr-single-img




Now we have a surface dataset of the globe loaded - unfortunately, the dataset
shows the globe with a uniform radius which hides topographic releif.
Using :func:`pyvista.PolyData.compute_normals`, we can compute the normal vectors
on the globe at all points in the dataset, then use the values given in the
dataset to warp the surface in the normals direction to create some
exaggerated topographic relief.


.. code-block:: default


    # Compute the normals in-place and use them to warp the globe
    mesh.compute_normals() # this activates the normals as well

    # Now use those normals to warp the surface
    warp = mesh.warp_by_scalar(factor=0.5e-5)

    # And let's see it!
    warp.plot(cmap='gist_earth', show_scalar_bar=False)



.. image:: /examples/01-filter/images/sphx_glr_compute-normals_002.png
    :class: sphx-glr-single-img





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  16.701 seconds)


.. _sphx_glr_download_examples_01-filter_compute-normals.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: compute-normals.py <compute-normals.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: compute-normals.ipynb <compute-normals.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
