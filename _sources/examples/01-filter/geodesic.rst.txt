.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_examples_01-filter_geodesic.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_01-filter_geodesic.py:


Geodesic Paths
~~~~~~~~~~~~~~

Calculates the geodesic path betweeen two vertices using Dijkstra's algorithm


.. code-block:: default

    # sphinx_gallery_thumbnail_number = 1
    import pyvista as pv
    from pyvista import examples

    sphere = examples.load_globe()







Get teh geodesic path as a new :class:`pyvista.PolyData` object:


.. code-block:: default


    geodesic = sphere.geodesic(0, sphere.n_points - 1)







Render the path along the sphere


.. code-block:: default


    p = pv.Plotter()
    p.add_mesh(geodesic, line_width=10, color="red", label="Geodesic Path")
    p.add_mesh(sphere, show_edges=True)
    p.camera_position = [-1, -1, 1]
    p.add_legend()
    p.show()




.. image:: /examples/01-filter/images/sphx_glr_geodesic_001.png
    :class: sphx-glr-single-img




How long is that path?


.. code-block:: default

    distance = sphere.geodesic_distance(0, sphere.n_points - 1)
    print(distance)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    19973118631.340134




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.309 seconds)


.. _sphx_glr_download_examples_01-filter_geodesic.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: geodesic.py <geodesic.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: geodesic.ipynb <geodesic.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
