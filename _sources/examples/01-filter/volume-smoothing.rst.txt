.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_examples_01-filter_volume-smoothing.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_01-filter_volume-smoothing.py:


Volume Smoothing
~~~~~~~~~~~~~~~~

Smoothing rough edges of a volumetric surface


.. code-block:: default


    # sphinx_gallery_thumbnail_number = 4
    import pyvista as pv
    from pyvista import examples







Suppose you extract a volumetric subset of a dataset that has roughly defined
edges. Perhaps you'd like a smooth representation of that model region. This
can be achieved by extracting the bounding surface of the volume and applying
a :func:`pyvista.PolyData.smooth` filter.

The below code snippet loads a sample roughly edged volumetric dataset:


.. code-block:: default


    # Vector to view rough edges
    cpos = [-2, 5, 3]

    # Load dataset
    data = examples.load_uniform()
    # Extract a rugged volume
    vol = data.threshold_percent(30, invert=1)
    vol.plot(show_edges=True, cpos=cpos)




.. image:: /examples/01-filter/images/sphx_glr_volume-smoothing_001.png
    :class: sphx-glr-single-img




Extract the outer surface of the volume using the
:func:`pyvista.DataSetFilters.extract_geometry` filter and then apply the
smoothing filter:


.. code-block:: default


    # Get the out surface as PolyData
    surf = vol.extract_geometry()
    # Smooth the surface
    smooth = surf.smooth()
    smooth.plot(show_edges=True, cpos=cpos)




.. image:: /examples/01-filter/images/sphx_glr_volume-smoothing_002.png
    :class: sphx-glr-single-img




Not smooth enough? Try increasing the number of iterations for the laplacian
smoothing algorithm:


.. code-block:: default


    # Smooth the surface even more
    smooth = surf.smooth(n_iter=100)
    smooth.plot(show_edges=True, cpos=cpos)




.. image:: /examples/01-filter/images/sphx_glr_volume-smoothing_003.png
    :class: sphx-glr-single-img




Still not smooth enough? Increase the number of iterations for the laplacian
smoothing algorithm to a crazy high value:


.. code-block:: default


    # Smooth the surface EVEN MORE
    smooth = surf.smooth(n_iter=1000)
    smooth.plot(show_edges=True, cpos=cpos)



.. image:: /examples/01-filter/images/sphx_glr_volume-smoothing_004.png
    :class: sphx-glr-single-img





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  9.700 seconds)


.. _sphx_glr_download_examples_01-filter_volume-smoothing.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: volume-smoothing.py <volume-smoothing.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: volume-smoothing.ipynb <volume-smoothing.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
