.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_examples_00-load_read-parallel.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_00-load_read-parallel.py:


Parallel Files
~~~~~~~~~~~~~~

The VTK library supports parallel file foramts. Reading meshes broken up into
several files is natively supported by VTK and PyVista


.. code-block:: default

    # sphinx_gallery_thumbnail_number = 1
    import pyvista as pv
    from pyvista import examples
    import os







Let's go ahead and download the sample dataset containing an
:class:`pyvista.UnstructuredGrid` broken up into several files.


.. code-block:: default


    # Do not capture output because we'll demo how to read the file
    examples.download_blood_vessels()







The above code downloaded a dataset containing a set of parallel files for a
blood vessel mesh and returned an :class:`pyvista.UnstructuredGrid` - we did
not grab that UnstructuredGrid, so that we could demo how to use these types
of files.

Let's inspect where this downloaded our dataset:


.. code-block:: default

    path = os.path.join(pv.EXAMPLES_PATH, "blood_vessels")
    print(os.listdir(path))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ['T0000000500', 'T0000000500.pvtu']




.. code-block:: default

    print(os.listdir(os.path.join(path, "T0000000500")))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ['003.vtu', '001.vtu', '002.vtu', '000.vtu']



Note that a ``.pvtu`` file is available along side a directory. This
directory contains all the parallel files or pieces that make the whole mesh.
We can simply read the ``.pvtu`` file and VTK will handle putting the mesh
together.


.. code-block:: default

    filename = os.path.join(path, "T0000000500.pvtu")
    mesh = pv.read(filename)
    print(mesh)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    UnstructuredGrid (0x7fa29baab768)
      N Cells:      39353
      N Points:     48823
      X Bounds:     5.300e+01, 1.210e+02
      Y Bounds:     5.000e+01, 9.700e+01
      Z Bounds:     6.400e+01, 1.820e+02
      N Arrays:     5




Plot the pieced together mesh


.. code-block:: default

    mesh.plot(scalars="node_value", categories=True)





.. image:: /examples/00-load/images/sphx_glr_read-parallel_001.png
    :class: sphx-glr-single-img





.. code-block:: default

    mesh.plot(scalars="density")



.. image:: /examples/00-load/images/sphx_glr_read-parallel_002.png
    :class: sphx-glr-single-img





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  3.067 seconds)


.. _sphx_glr_download_examples_00-load_read-parallel.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: read-parallel.py <read-parallel.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: read-parallel.ipynb <read-parallel.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
