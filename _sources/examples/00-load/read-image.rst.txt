.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_examples_00-load_read-image.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_00-load_read-image.py:


Read Image Files
~~~~~~~~~~~~~~~~

Read and plot image files (JPEG, TIFF, PNG, etc).


.. code-block:: default

    import pyvista as pv
    from pyvista import examples







PyVista fully supportes reading images into their own spatially referenced
data objects (this example) as well as supports texture mapping of images
onto datasets (see :ref:`ref_texture_example`).

Download a JPEG image of a puppy and load it to :class:`pyvista.UniformGrid`.
This could similarly be implemented with any image file by using the
:func:`pyvista.read` function and passing the path to the image file.


.. code-block:: default


    image = examples.download_puppy()
    # or...
    # image = pv.read('my_image.jpg')







When plotting images stored in :class:`pyvista.UniformGrid` objects, it is
important to specify usign the `rgb` option when plotting to ensure that the
image's true colors are used and not mapped.


.. code-block:: default


    # True image colors
    image.plot(rgb=True, cpos="xy")




.. image:: /examples/00-load/images/sphx_glr_read-image_001.png
    :class: sphx-glr-single-img





.. code-block:: default


    # Mapped image colors
    image.plot(cpos="xy")



.. image:: /examples/00-load/images/sphx_glr_read-image_002.png
    :class: sphx-glr-single-img





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  13.393 seconds)


.. _sphx_glr_download_examples_00-load_read-image.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: read-image.py <read-image.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: read-image.ipynb <read-image.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
