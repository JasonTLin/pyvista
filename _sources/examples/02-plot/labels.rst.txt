.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_examples_02-plot_labels.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_02-plot_labels.py:


Label Points
~~~~~~~~~~~~

Use string arrays in a point set to label points


.. code-block:: default

    # sphinx_gallery_thumbnail_number = 3
    from pyvista import examples
    import pyvista as pv
    import numpy as np

    # Labels are not currently supported by the VTKjs conversion script
    pv.rcParams["use_panel"] = False







Label String Array
++++++++++++++++++

This example will label the nodes of a mesh with a given array of string
labels for each of the nodes.


.. code-block:: default


    # Make some random points
    poly = pv.PolyData(np.random.rand(10, 3))







Add string labels to the point data - this associates a label with every
node:


.. code-block:: default


    poly["My Labels"] = ["Label {}".format(i) for i in range(poly.n_points)]

    print(poly)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    PolyData (0x7f42923a5588)
      N Cells:      10
      N Points:     10
      X Bounds:     1.627e-01, 9.752e-01
      Y Bounds:     6.362e-02, 8.907e-01
      Z Bounds:     2.068e-01, 9.020e-01
      N Arrays:     1




Now plot the points with labels:


.. code-block:: default


    plotter = pv.Plotter()
    plotter.add_point_labels(poly, "My Labels", point_size=20, font_size=36)
    plotter.show()





.. image:: /examples/02-plot/images/sphx_glr_labels_001.png
    :class: sphx-glr-single-img




Label Node Locations
++++++++++++++++++++

This example will label the nodes of a mesh with their coordinate locations


.. code-block:: default


    # Load example beam file
    grid = pv.UnstructuredGrid(examples.hexbeamfile)








Create plotting class and add the unstructured grid


.. code-block:: default

    plotter = pv.Plotter()
    plotter.add_mesh(grid, show_edges=True, color="tan")

    # Add labels to points on the yz plane (where x == 0)
    points = grid.points
    mask = points[:, 0] == 0
    plotter.add_point_labels(
        points[mask], points[mask].tolist(), point_size=20, font_size=36
    )

    plotter.camera_position = [
        (-1.5, 1.5, 3.0),
        (0.05, 0.6, 1.2),
        (0.2, 0.9, -0.25)]

    plotter.show()





.. image:: /examples/02-plot/images/sphx_glr_labels_002.png
    :class: sphx-glr-single-img




Label Scalar Values
+++++++++++++++++++

This example will label pooints with their scalar values


.. code-block:: default


    mesh = examples.load_uniform().slice()








.. code-block:: default

    p = pv.Plotter()

    # Add the mesh:
    p.add_mesh(mesh, scalars="Spatial Point Data", show_edges=True)
    # Add the points with scalar labels:
    p.add_point_scalar_labels(mesh, "Spatial Point Data", point_size=20, font_size=36)

    # Use a nice camera position:
    p.camera_position = [(7, 4, 5), (4.4, 7.0, 7.2), (0.8, 0.5, 0.25)]

    p.show()



.. image:: /examples/02-plot/images/sphx_glr_labels_003.png
    :class: sphx-glr-single-img





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  3.867 seconds)


.. _sphx_glr_download_examples_02-plot_labels.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: labels.py <labels.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: labels.ipynb <labels.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
