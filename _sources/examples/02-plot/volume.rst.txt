.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_examples_02-plot_volume.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_02-plot_volume.py:


Volume Rendering
~~~~~~~~~~~~~~~~

Volume render uniform mesh types like :class:`pyvista.UniformGrid` or 3D
NumPy arrays


.. code-block:: default


    # sphinx_gallery_thumbnail_number = 3
    import pyvista as pv
    from pyvista import examples

    # Volume rednering is not supported with Panel yet
    pv.rcParams["use_panel"] = False

    # Download a volumetric dataset
    vol = examples.download_knee_full()
    print(vol)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    UniformGrid (0x7ff0dbda56a8)
      N Cells:      10225800
      N Points:     10368384
      X Bounds:     0.000e+00, 1.497e+02
      Y Bounds:     0.000e+00, 1.786e+02
      Z Bounds:     0.000e+00, 2.000e+02
      Dimensions:   208, 248, 201
      Spacing:      7.230e-01, 7.230e-01, 1.000e+00
      N Arrays:     1




Simple Volume Render
++++++++++++++++++++



.. code-block:: default


    # A nice camera position
    cpos = [(-381.74, -46.02, 216.54), (74.8305, 89.2905, 100.0), (0.23, 0.072, 0.97)]

    vol.plot(volume=True, cmap="bone", cpos=cpos)





.. image:: /examples/02-plot/images/sphx_glr_volume_001.png
    :class: sphx-glr-single-img




Opacity Mappings
++++++++++++++++

Or use the :func:`pyvista.BasePlotter.add_volume` method like below.
Note that here we use a non-default opacity mapping to a sigmoid:


.. code-block:: default


    p = pv.Plotter()
    p.add_volume(vol, cmap="bone", opacity="sigmoid")
    p.camera_position = cpos
    p.show()




.. image:: /examples/02-plot/images/sphx_glr_volume_002.png
    :class: sphx-glr-single-img




You can also use a custom opactiy mapping


.. code-block:: default

    opacity = [0, 0, 0, 0.1, 0.3, 0.6, 1]

    p = pv.Plotter()
    p.add_volume(vol, cmap="viridis", opacity=opacity)
    p.camera_position = cpos
    p.show()





.. image:: /examples/02-plot/images/sphx_glr_volume_003.png
    :class: sphx-glr-single-img




Cool Volume Examples
++++++++++++++++++++

Here are a few more cool colume rendering examples


.. code-block:: default


    head = examples.download_head()

    p = pv.Plotter()
    p.add_volume(head, cmap="cool", opacity="sigmoid_6")
    p.camera_position = [(-228.0, -418.0, -158.0), (94.0, 122.0, 82.0), (-0.2, -0.3, 0.9)]
    p.show()




.. image:: /examples/02-plot/images/sphx_glr_volume_004.png
    :class: sphx-glr-single-img





.. code-block:: default


    bolt_nut = examples.download_bolt_nut()

    p = pv.Plotter()
    p.add_volume(bolt_nut, cmap="coolwarm", opacity="sigmoid_5")
    p.show()





.. image:: /examples/02-plot/images/sphx_glr_volume_005.png
    :class: sphx-glr-single-img





.. code-block:: default


    frog = examples.download_frog()

    p = pv.Plotter()
    p.add_volume(frog, cmap="viridis", opacity="sigmoid_6")
    p.camera_position = [(929., 1067., -278.9),
                         (249.5, 234.5, 101.25),
                         (-0.2048, -0.2632, -0.9427)]
    p.show()



.. image:: /examples/02-plot/images/sphx_glr_volume_006.png
    :class: sphx-glr-single-img





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  25.814 seconds)


.. _sphx_glr_download_examples_02-plot_volume.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: volume.py <volume.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: volume.ipynb <volume.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
