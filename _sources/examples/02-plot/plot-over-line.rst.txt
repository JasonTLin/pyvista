.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_examples_02-plot_plot-over-line.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_02-plot_plot-over-line.py:


Plot Over Line
~~~~~~~~~~~~~~

Plot the values of a dataset over a line through that dataset


.. code-block:: default


    # sphinx_gallery_thumbnail_number = 2
    import pyvista as pv
    from pyvista import examples







Volumetric Mesh
+++++++++++++++

First a 3D mesh example to demonstrate a


.. code-block:: default

    mesh = examples.download_kitchen()

    # Make two points to construct the line between
    a = [mesh.bounds[0], mesh.bounds[2], mesh.bounds[4]]
    b = [mesh.bounds[1], mesh.bounds[3], mesh.bounds[5]]

    # Preview how this line intersects this mesh
    line = pv.Line(a, b)

    p = pv.Plotter()
    p.add_mesh(mesh, style="wireframe", color="w")
    p.add_mesh(line, color="b")
    p.show()




.. image:: /examples/02-plot/images/sphx_glr_plot-over-line_001.png
    :class: sphx-glr-single-img




Run the filter and produce a line plot


.. code-block:: default

    mesh.plot_over_line(a, b, resolution=100)





.. image:: /examples/02-plot/images/sphx_glr_plot-over-line_002.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/travis/build/pyvista/pyvista/pyvista/core/filters.py:1442: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.
      return plt.show()



Flat Surface
++++++++++++

We could also plot the values of a mesh that lies on a flat surface


.. code-block:: default

    mesh = examples.download_st_helens()

    # Make two points to construct the line between
    a = [mesh.center[0], mesh.bounds[2], mesh.bounds[5]]
    b = [mesh.center[0], mesh.bounds[3], mesh.bounds[5]]

    # Preview how this line intersects this mesh
    line = pv.Line(a, b)

    p = pv.Plotter()
    p.add_mesh(mesh)
    p.add_mesh(line, color="white", line_width=10)
    p.add_point_labels(
        [a, b], ["A", "B"], font_size=48, point_color="red", text_color="red"
    )
    p.show()




.. image:: /examples/02-plot/images/sphx_glr_plot-over-line_003.png
    :class: sphx-glr-single-img




Run the filter and produce a line plot


.. code-block:: default

    mesh.plot_over_line(
        a,
        b,
        resolution=10000,
        title="Elevation Profile",
        ylabel="Height above sea level",
        figsize=(10, 5),
    )



.. image:: /examples/02-plot/images/sphx_glr_plot-over-line_004.png
    :class: sphx-glr-single-img





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  4.797 seconds)


.. _sphx_glr_download_examples_02-plot_plot-over-line.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot-over-line.py <plot-over-line.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot-over-line.ipynb <plot-over-line.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
